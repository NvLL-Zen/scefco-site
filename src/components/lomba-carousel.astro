---
import { Image } from "astro:assets";
import EnglishSpeech from "../images/scefMascots/englishSpeech.png";
import Esai from "../images/scefMascots/esai.png";
import Futsal from "../images/scefMascots/futsal.png";
import Mhq from "../images/scefMascots/mhq.png";
import PidatoArab from "../images/scefMascots/pidatoArab.png";
import StoryTelling from "../images/scefMascots/storyTelling.png";
import RatohJaroe from "../images/scefMascots/tariSaman.png";
import LombaTemplate from "./lomba-template.astro";
import Competitions_Title from "../images/titles/comps.png";
---

<Image class="hoverPop" id="comp_title" src={Competitions_Title} alt="Competitions" />
<div id="horizontal-scroll">
  <div id="carousel-container">
    <div class="carousel-space"></div>
    <LombaTemplate id="EnglishSpeech" class="cards" namaLomba="ENGLISH SPEECH" photo={EnglishSpeech} linkLomba="https://forms.gle/HmvtymrcQgA1xF839"/>
    <LombaTemplate id="Esai"          class="cards" namaLomba="ESAI" photo={Esai} linkLomba="https://forms.gle/LC3ArzKBXQ1Pm4VbA"/>
    <LombaTemplate id="Futsal"        class="cards" namaLomba="FUTSAL" photo={Futsal} linkLomba="https://forms.gle/HXyC6HAnxPRnPf6t8"/>
    <LombaTemplate id="Mhq"           class="cards" namaLomba="MHQ" photo={Mhq} linkLomba="https://forms.gle/ZQbzk7jMHWyc21Fy7"/>
    <LombaTemplate id="PidatoArab"    class="cards" namaLomba="PIDATO ARAB" photo={PidatoArab} linkLomba="https://forms.gle/fJXbea5QgEvafgTH9"/>
    <LombaTemplate id="StoryTelling"  class="cards" namaLomba="STORY TELLING" photo={StoryTelling} linkLomba="https://forms.gle/BHAfiC8U7Nd6eA2A8"/>
    <LombaTemplate id="RatohJaroe"   class="cards" namaLomba="RATOH JAROE"  photo={RatohJaroe} linkLomba="https://forms.gle/MfqjyM3XqWQuF6Zt7"/>
    <div class="carousel-space"></div>
  </div>
</div>

<style is:global>
  /* * {
    border: 1px solid  red;
  } */
  @media only screen and (min-width: 720px) {
    #RatohJaroe {
      background: url("../images/bg-lomba/ratoh.png");
      background-size: 100% 100%;
    
    }
    #EnglishSpeech {
      background: url("../images/bg-lomba/english.png");
      background-size: 100% 100%;
    }

    #Esai {
      background: url("../images/bg-lomba/esai.png");
      background-size: 100% 100%;
    }

    #Futsal {
      background: url("../images/bg-lomba/futsal.png");
      background-size: 100% 100%;
    }

    #Mhq {
      background: url("../images/bg-lomba/mhq.png");
      background-size: 100% 100%;
    }

    #PidatoArab {
      background: url("../images/bg-lomba/arab.png");
      background-size: 100% 100%;
    }

    #StoryTelling {
      background: url("../images/bg-lomba/story.png");
      background-size: 100% 100%;
    }




  }

  @media only screen and (max-width: 720px) {
    .cards {
      background: white;
      background-size: 100% 100%;
    }
  }
</style>
<style>
  #carousel-container {
    display: flex;
    gap: 5px;
    padding: 5px;
    align-items: center;
    height: 60vh;
    background-color: transparent;
    width: max-content;
  }

  #horizontal-scroll {
    width: 100%;
    overflow-x: scroll;
    cursor: grab;
    background-color: transparent;
  }

  #horizontal-scroll.active {
    cursor: grabbing;
  }

  #comp_title {
    width: 50vw;
    height: 10vw;
  }

  .carousel-space {
    width: 28vw;
    height: 40vh;
    background-color: transparent;
  }

  .carousel-item:hover {
    transform: scale(1.2);
  }

  @media only screen and (max-width: 720px) {
    #comp_title {
      width: 75vw;
      height: 15vw;
    }
  }
</style>

<script>
  let deviceWidth = Math.max(
    document.documentElement.clientWidth || 0,
    window.innerWidth || 0
  );
  if (deviceWidth <= 720) {
    console.log("Mobile")
    const carouselItems = document.querySelectorAll(".carousel-item");
    // Create an intersection observer to track visibility of elements
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            entry.target.classList.add("in-view"); // Add scale when in view
          } else {
            entry.target.classList.remove("in-view"); // Remove scale when out of view
          }
        });
      },
      {
        threshold: 0.8, // Adjust threshold so element has to be at least 50% visible to trigger
      }
    );

    // Observe each carousel item
    carouselItems.forEach((item) => {
      observer.observe(item);
    });
  } else {
    console.log("PC")
    const slider = document.querySelector("#horizontal-scroll");
    let isDown = false;
    let startX;
    let scrollLeft;

    slider.addEventListener("mousedown", (e) => {
      isDown = true;
      slider.classList.add("active");
      startX = e.pageX - slider.offsetLeft;
      scrollLeft = slider.scrollLeft;
    });

    slider.addEventListener("mouseleave", () => {
      isDown = false;
      slider.classList.remove("active");
    });

    slider.addEventListener("mouseup", () => {
      isDown = false;
      slider.classList.remove("active");
    });

    slider.addEventListener("mousemove", (e) => {
      if (!isDown) return;
      e.preventDefault();
      const x = e.pageX - slider.offsetLeft;
      const walk = (x - startX) * 2; // Adjust scrolling speed
      slider.scrollLeft = scrollLeft - walk;
    });

    document.addEventListener("DOMContentLoaded", function () {
      const container = document.getElementById("horizontal-scroll");
      const carouselItems = document.querySelectorAll(".carousel-item");

      // Adjust this index to target the 4th item (index 3 for zero-based indexing)
      const targetItemIndex = 3;
      const targetItem = carouselItems[targetItemIndex];

      // Calculate the distance between the container and the target item
      const targetPosition = targetItem.offsetLeft - container.offsetLeft;

      // Scroll the container to the target position smoothly
      container.scrollTo({
        left:
          targetPosition -
          container.clientWidth / 2 +
          targetItem.clientWidth / 2, // Center the item
        behavior: "smooth", // Smooth scrolling
      });
    });
  }
</script>
